# Docker image for DHCP relay

DOCKER_OLS_STEM = docker-ols
DOCKER_OLS = $(DOCKER_OLS_STEM).gz
DOCKER_OLS_DBG = $(DOCKER_OLS_STEM)-$(DBG_IMAGE_MARK).gz

$(DOCKER_OLS)_PATH = $(DOCKERS_PATH)/$(DOCKER_OLS_STEM)

$(DOCKER_OLS)_DEPENDS += $(ISC_OLS) $(SONIC_DHCPMON) $(SONIC_DHCPRELAY) $(LIBSWSSCOMMON) $(SONIC_RSYSLOG_PLUGIN) 

$(DOCKER_OLS)_DBG_DEPENDS = $($(DOCKER_CONFIG_ENGINE_BULLSEYE)_DBG_DEPENDS)
$(DOCKER_OLS)_DBG_DEPENDS += $(ISC_OLS_DBG) $(SONIC_DHCPRELAY_DBG) $(SONIC_DHCPMON_DBG) $(SONIC_RSYSLOG_PLUGIN)

$(DOCKER_OLS)_DBG_IMAGE_PACKAGES = $($(DOCKER_CONFIG_ENGINE_BULLSEYE)_DBG_IMAGE_PACKAGES)

$(DOCKER_OLS)_LOAD_DOCKERS = $(DOCKER_CONFIG_ENGINE_BULLSEYE)

$(DOCKER_OLS)_INSTALL_PYTHON_WHEELS = $(SONIC_UTILITIES_PY3)
$(DOCKER_OLS)_INSTALL_DEBS = $(PYTHON3_SWSSCOMMON)

$(DOCKER_OLS)_VERSION = 1.0.0
$(DOCKER_OLS)_PACKAGE_NAME = ols
$(DOCKER_OLS)_PACKAGE_DEPENDS = database^1.0.0

$(DOCKER_OLS)_SERVICE_AFTER = swss syncd
$(DOCKER_OLS)_SERVICE_DEPENDENT_OF = swss

SONIC_DOCKER_IMAGES += $(DOCKER_OLS)
SONIC_DOCKER_DBG_IMAGES += $(DOCKER_OLS_DBG)

ifeq ($(INCLUDE_KUBERNETES),y)
$(DOCKER_OLS)_DEFAULT_FEATURE_OWNER = kube
endif

$(DOCKER_OLS)_DEFAULT_FEATURE_STATE_ENABLED = y

ifeq ($(INCLUDE_OLS),y)
ifeq ($(INSTALL_DEBUG_TOOLS),y)
SONIC_PACKAGES_LOCAL += $(DOCKER_OLS_DBG)
else
SONIC_PACKAGES_LOCAL += $(DOCKER_OLS)
endif
endif

$(DOCKER_OLS)_CONTAINER_NAME = ols
$(DOCKER_OLS)_CONTAINER_PRIVILEGED = false
$(DOCKER_OLS)_CONTAINER_VOLUMES += /etc/sonic:/etc/sonic:ro
$(DOCKER_OLS)_CONTAINER_VOLUMES += /etc/timezone:/etc/timezone:ro
$(DOCKER_OLS)_CONTAINER_TMPFS += /tmp/
$(DOCKER_OLS)_CONTAINER_TMPFS += /var/tmp/

#$(DOCKER_OLS)_CLI_CONFIG_PLUGIN = /cli/config/plugins/ols.py
$(DOCKER_OLS)_CLI_SHOW_PLUGIN = /cli/show/plugins/show.py
#$(DOCKER_OLS)_CLI_CLEAR_PLUGIN = /cli/clear/plugins/clear_ols_counter.py

$(DOCKER_OLS)_FILES += $(SUPERVISOR_PROC_EXIT_LISTENER_SCRIPT)
